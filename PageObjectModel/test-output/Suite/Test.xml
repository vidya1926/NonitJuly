<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="TL0017" failures="0" tests="2" name="Test" time="11.324" errors="0" timestamp="2022-09-25T14:39:42 IST">
  <testcase classname="baseclass.ProjectSpecificMethod2" name="@BeforeClass testDetails" time="0.01">
    <failure type="java.lang.IllegalArgumentException" message="testName cannot be null or empty">
      <![CDATA[java.lang.IllegalArgumentException: testName cannot be null or empty
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:80)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:100)
at com.aventstack.extentreports.ExtentReports.createTest(ExtentReports.java:238)
at baseclass.ProjectSpecificMethod2.testDetails(ProjectSpecificMethod2.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
    </failure>
  </testcase> <!-- @BeforeClass testDetails -->
  <testcase classname="baseclass.ProjectSpecificMethod2" name="@BeforeMethod preCondition" time="-1.664096981974E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase classname="baseclass.ProjectSpecificMethod2" name="@AfterMethod postCondition" time="-1.664096982082E9">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase classname="baseclass.ProjectSpecificMethod2" name="@BeforeMethod preCondition" time="-1.664096982142E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase classname="baseclass.ProjectSpecificMethod2" name="@AfterMethod postCondition" time="-1.664096982225E9">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase classname="testcases.CreateLead" name="runCreateLead" time="0.0">
    <skipped/>
  </testcase> <!-- runCreateLead -->
  <testcase classname="testcases.CreateLead" name="runCreateLead" time="0.0">
    <skipped/>
  </testcase> <!-- runCreateLead -->
</testsuite> <!-- Test -->
